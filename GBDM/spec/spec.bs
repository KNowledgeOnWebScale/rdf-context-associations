<pre class='metadata'>
Title: RDF Graph-Based Data Model
Shortname: RDF GBDM Spec
Level: none
Status: LD
Repository: KNowledgeOnWebScale/rdf-gbdm-spec
URL: https://knowledgeonwebscale.github.io/rdf-gbdm-spec/
Editor: Ruben Dedecker, IDLab - Ghent University, ruben.dedecker@ugent.be
Editor: Pieter Colpaert, IDLab - Ghent University, https://pietercolpaert.be
Abstract: This specification introduces the Graph-Based Data Model, an RDF model that restricts its content to the use of Named Graphs for the management of data and its associated context in Web ecosystems.
Markup Shorthands: markdown yes, css no
</pre>
<!-- Warning: Not Ready -->

<!-- useful sources? -->
<!-- [Semantics of RDF Datasets](https://www.w3.org/TR/rdf11-datasets/) -->
<!-- [Blank Node Relabeling](https://www.w3.org/TR/rdf11-mt/#shared-blank-nodes-unions-and-merges) -->
<!-- [Skolemization](https://www.w3.org/TR/rdf11-mt/#skolemization-informative) -->

Introduction {#intro}
=====================

Issue: do we keep the Blank Node concept, or from a usability standpoint choose for skolemized identifiers `.well-known/genid/...` across the board?

The RDF Graph-Based Data Model (GBDM) is a modeling approach that restricts the core RDF specification 
to the use of named graphs for the management of data and associated context.
With initiatives in data spaces, credential wallets, Solid and similar data management and exchange
systems being pushed for exchanging information on the Web, with considerations for metadata in the form
of provenance, policy definitions, signatures and more being primary considerations, 
we observe a distinct lack of support provided by the RDF data model in tackling these problems.
A concrete example of this can be seen with the W3C recommendations for signatures in RDF being 
the Verifiable Credentials spec, which does not support federated querying of multiple credentials
within a local RDF context, and relies on the resource boundary and the JSON structure of the 
JSON-LD credential to enforce the signature target boundary.
Another example is the Open Digital Rights Language, a W3C recommendation that provides an RDF
data model for the definition of usage policies, but restricts it target definition to a single
URI, that is left up to interpretation.

The reliance of RDF on Web URIs to define targets through resource boundaries works well for 
Open Web Environments, but imposes significant difficulties for the management of data and 
context in cases where information is centralized, such as in data spaces, wallets and pods [cite What's in a Pod.],
where the organization of data in these resources causes implications in authorization management,
where the inability to associate statements to resources during query execution makes combined query
evaluation over data and associated context impossible, and where resource structures are prone to
the creation of implicit APIs on top of data, all of which hinder the interoperability of data,
the capacity for its integration and its ability to enable reuse.


The GBDM data model is introduced here as a restriction of the RDF data model to alleviate
some of the core issues presented by the core RDF specification in tackling these difficulties 
for the storage, exchange and integration of data in combination with its associated context.
With this specification, we address an observed lack of support for uniform management of contextual
information across RDF ecosystems, for which we focus on the generation, exchange, storage and integration
of combined data and contextual meta-information within the RDF data model, pushing for handling context
as a first-class citizen in the data management of Web ecosystems, to maximize potential for integration 
and reuse of data.

Envisioned use-cases of our approach include: 
    * attaching usage policies in the form of ODRL/DPV descriptions to a set of triples
    * signing sets of triples with a verifiable signature 
    * structuring trust envelopes
    

<div class="example">
An example representation of a data graph with associated context provided
through a metadata graph, locally defined in RDF:
```turtle
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.

_:dataGraph {
    <http://people.org/ruben> foaf:name "Ruben";
        foaf:age 28.
}
_:provenanceGraph {
    dcterms:source <http://dataspaces.org/ruben>;
    dcterms:creator <http://people.org/ruben>;
    dcterms:created "2021-01-01"^^xsd:date.
}
```
</div>

Based on prior work presented at [ESWC 2025](https://pod.rubendedecker.be/scholar/publications/2025/ESWC/demo/paper.pdf),
as well as unpublished work submitted to [ISWC 2025](https://pod.rubendedecker.be/scholar/publications/2025/ISWC/paper.pdf),
we conclude that named graphs provide the most suitable approach for defining local boundaries in the local scope of an RDF dataset,
when compared with other approaches such as RDF skolemization and Triple Terms, due to their capacity to natively represent sets of statements,
their integration in all RDF 1.1 compatible data stores and software, as well as their integration into the SPARQL query language.

Issue: fix ISWC Link with arxiv link

The RDF Graph-Based Data Modeling {#model}
==================================================

The RDF Graph-Based Data Modeling (GBDM) restricts the RDF modeling approach to to the use of named graphs. 
It imposes the following requirements on modeled data: 
    1. statements MUST be defined within the confines of a named graph, NOT in the default graph.
    2. named graphs MUST be defined with either a blank node identifier, or with a skolem identifier using the `.well-known/genid/` prefix to ensure a locally-bound unique  generation of a graph name identifiers.


Conversion Algorithm {#conversion}
==================================

To convert any RDF data into the Graph-Based Data Model, 
we define a conversion algorithm that can be applied to any RDF dataset:

1. For all named graphs in the source RDF dataset with a graph name identifier `I` that is neither a blank node nor skolem identifier, relabel the graph name to a new blank node or skolem identifier `I'`.
2. For each statement in the data source that makes use of this identifier `I`, **evaluate** if this the identifier is used as a graph reference, in which case this identifier must also be relabeled to `I'`, or as an identifier for the resource `I`, in which case the identifier is retained.
3. For all statements in the default graph, encapsulate the statements in a new named graph defined with a blank node or skolem identifier `G`.

Due to the lack of defined semantics of the graph name in relation to the RDF graph in RDF named graphs, 
the intended meaning of the graph name identifier may require prior knowledge or evaluation of the data model.
[The following example](#example_conversion) shows how a single identifiers could be used both to describe a 
resource and to reference a named graph in RDF.

<div class="example" id="example_conversion">
The following example illustrates a case where the graph name identifier is both used as 
a reference to a resource, and a reference to the local named graph, where it serves as
an implicit context for the contained statements. This example clearly indicates the 
difficulty of automating this decision if the source data model is not known.

```turtle
@prefix ex: <http://example.org/ns#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix dcterms: <http://purl.org/dc/terms/>.

<http://dataspace.org/Bob/resource1> a rdf:Resource.

_:retrieval a ex:Retrieval;
    ex:hasContents <http://dataspace.org/Bob/resource1>.

<http://dataspace.org/Bob/resource1> {
    ex:statement1 ex:property "value1" .
    ex:statement2 ex:property "value2" .
}
``` 
Processing the above graph, we have two references to the graph name 
`<http://dataspace.org/Bob/resource1>`. The first statement indicating
this identifier to be a resource, refers to the original URI. 
This identifiers SHOULD NOT be relabeled, as this type definition is
defined on the specific identifier. 
In the retrieval entity, the reference to `<http://dataspace.org/Bob/resource1>`
is used as a reference to the graph contents. In this case, the identifier SHOULD
be relabeled to remain consistent in the semantics of the resulting graph. 
```turtle
@prefix ex: <http://example.org/ns#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix rdfg: <http://www.w3.org/2004/03/trix/rdfg-1/>.
@prefix sd: <http://www.w3.org/ns/sparql-service-description#>.

<http://dataspace.org/Bob/resource1> a rdf:Resource.

_:retrieval a ex:Retrieval;
    ex:hasContents _:graph.

_:graph {
    ex:statement1 ex:property "value1" .
    ex:statement2 ex:property "value2" .
}

# Explicit contextualization
_:graph a rdfg:Graph, sd:NamedGraph;
    prov:wasDerivedFrom <http://dataspace.org/Bob/resource1>.
``` 
</div>

Publisher Behavior {#publisher}
===============================

This section defines how a data publisher can adhere to the context associations specification,
aiming at maximizing the integration potential and usability of published data, while minimizing 
intrusion in existing workflows and data management practices of RDF ecosystems.

## SPARQL endpoint ## {#publisher-sparql}
A CA publisher providing a SPARQL endpoint over its internal knowledge graph,
can freely allow the internal data model to be queried through SPARQL.

<!-- protection of internals in case of skolem IRIs -->
The publisher MAY choose to relabel skolem identifiers in the internal knowledge graph
to blank nodes to protect its internal data model and disallow external actors from referencing internal context.

<!-- support for non-ca clients -->
Additionally, the publisher MAY choose to wrap SPARQL queries that do not make use of the `GRAPH` keyword
in a `GRAPH ?g`, as shown in [the example below](#example_query). During this process, they are free to
federate this relabeling over all contained graphs, or to match the query at the level of individual contained graphs.

Issue: Check the SPARQL service definitions ontology. Can we advertise this use of named graphs from here?

<div class="example" id="example_query">
An example of a query relabeling to map a naive query to the CA data model.
```sparql
CONSTRUCT { BGP }
WHERE { BGP }
```
may be relabeled to
```sparql
CONSTRUCT { BGP }
WHERE { 
    GRAPH ?g { BGP} 
}
```
or federated over the contained graphs
```sparql
CONSTRUCT { BGP }
WHERE { 
    GRAPH ?g1 { bgp_triple_1 } 
    GRAPH ?g2 { bgp_triple_2 } 
    GRAPH ?g3 { bgp_triple_3 } 
}
```
</div>

## Resource Publishing ## {#publisher-resource}
Resources published MUST adhere to the Context Associations data model.

<!-- support for non-ca clients -->
A publisher MAY choose to duplicate statements in the default graph 
to support clients that cannot process named graphs present in the content.



Client Behavior {#client}
=========================

##  ## {#t1}
weq

## Processing incoming RDF data ## {#t2}
qew

## Processing incoming RDF data ## {#t3}
qwqe


